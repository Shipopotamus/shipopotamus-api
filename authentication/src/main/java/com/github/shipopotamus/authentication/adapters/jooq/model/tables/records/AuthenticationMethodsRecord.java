/*
 * This file is generated by jOOQ.
 */
package com.github.shipopotamus.authentication.adapters.jooq.model.tables.records;


import com.github.shipopotamus.authentication.adapters.jooq.model.tables.AuthenticationMethods;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthenticationMethodsRecord extends UpdatableRecordImpl<AuthenticationMethodsRecord> implements Record4<UUID, UUID, String, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>authentication_schema.authentication_methods.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>authentication_schema.authentication_methods.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for
     * <code>authentication_schema.authentication_methods.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>authentication_schema.authentication_methods.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(1);
    }

    /**
     * Setter for
     * <code>authentication_schema.authentication_methods.authentication_method_type</code>.
     */
    public void setAuthenticationMethodType(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>authentication_schema.authentication_methods.authentication_method_type</code>.
     */
    public String getAuthenticationMethodType() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>authentication_schema.authentication_methods.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>authentication_schema.authentication_methods.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, UUID, String, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, UUID, String, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return AuthenticationMethods.AUTHENTICATION_METHODS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return AuthenticationMethods.AUTHENTICATION_METHODS.ACCOUNT_ID;
    }

    @Override
    public Field<String> field3() {
        return AuthenticationMethods.AUTHENTICATION_METHODS.AUTHENTICATION_METHOD_TYPE;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return AuthenticationMethods.AUTHENTICATION_METHODS.CREATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getAccountId();
    }

    @Override
    public String component3() {
        return getAuthenticationMethodType();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getAccountId();
    }

    @Override
    public String value3() {
        return getAuthenticationMethodType();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public AuthenticationMethodsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public AuthenticationMethodsRecord value2(UUID value) {
        setAccountId(value);
        return this;
    }

    @Override
    public AuthenticationMethodsRecord value3(String value) {
        setAuthenticationMethodType(value);
        return this;
    }

    @Override
    public AuthenticationMethodsRecord value4(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AuthenticationMethodsRecord values(UUID value1, UUID value2, String value3, OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthenticationMethodsRecord
     */
    public AuthenticationMethodsRecord() {
        super(AuthenticationMethods.AUTHENTICATION_METHODS);
    }

    /**
     * Create a detached, initialised AuthenticationMethodsRecord
     */
    public AuthenticationMethodsRecord(UUID id, UUID accountId, String authenticationMethodType, OffsetDateTime createdAt) {
        super(AuthenticationMethods.AUTHENTICATION_METHODS);

        setId(id);
        setAccountId(accountId);
        setAuthenticationMethodType(authenticationMethodType);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }
}
